kind: ArgoCD
apiVersion: argoproj.io/v1alpha1
metadata:
  name: {{ $.Values.argocd.name }}
  namespace: {{ $.Values.argocd.controller }}
  {{- if $.Values.argocd.enabled }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  {{- end }}  
spec:
  sso:
    dex:  
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m 
          memory: 128Mi
    provider: dex
  resourceTrackingMethod: annotation+label
  applicationSet:
    logLevel: info
  controller:
    logLevel: debug
    resources:
      limits:
        cpu: 2000m
        memory: 2048Mi
      requests:
        cpu: 250m
        memory: 1024Mi
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  rbac:
    defaultPolicy: ''
    policy: |-
      g, {{ $.Values.argocd.group }}, role:admin
      p, role:operator, applications, get, */*, allow
      p, role:operator, applications, sync, */*, allow
      g, argo-admins, role:admin 
      g, argo-readers, role:readonly
      g, argo-operators, role:operator
      g, argo-dev-operators, role:operator-dev      
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 250m
        memory: 256Mi
    env:      
        - name: AVP_AUTH_TYPE
          valueFrom:
            secretKeyRef:
              key: AVP_AUTH_TYPE
              name: argocd-vault-plugin-credentials
        - name: AVP_TYPE
          valueFrom:
            secretKeyRef:
              key: AVP_TYPE
              name: argocd-vault-plugin-credentials
        - name: VAULT_ADDR
          valueFrom:
            secretKeyRef:
              key: VAULT_ADDR
              name: argocd-vault-plugin-credentials
        - name: AVP_ROLE_ID
          valueFrom:
            secretKeyRef:
              key: AVP_ROLE_ID
              name: argocd-vault-plugin-credentials        
        - name: AVP_SECRET_ID
          valueFrom:
            secretKeyRef:
              key: AVP_SECRET_ID
              name: argocd-vault-plugin-credentials                  
    mountsatoken: true
    serviceaccount: argocd-repo-server
    sidecarContainers:
      - command:
          - /var/run/argocd/argocd-cmp-server
        image: 'quay.io/argoproj/argocd:v2.4.8'
        name: avp-helm            
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp-dir
          - mountPath: /home/argocd/cmp-server/config
            name: cmp-plugin
          - mountPath: /usr/local/bin/argocd-vault-plugin
            name: custom-tools
            subPath: argocd-vault-plugin
    volumeMounts:
      - mountPath: /usr/local/bin/argocd-vault-plugin
        name: custom-tools
        subPath: argocd-vault-plugin
    volumes:
      - configMap:
          name: cmp-plugin
        name: cmp-plugin
      - emptyDir: {}
        name: custom-tools
      - emptyDir: {}
        name: tmp-dir                  
    initContainers:
      - args:
          - >-
            wget -O /custom-tools/argocd-vault-plugin
            https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64
            && chmod +x /custom-tools/argocd-vault-plugin && ls -la
            /custom-tools/
        command:
          - sh
          - '-c'
        env:
          - name: AVP_VERSION
            value: 1.11.0
        image: 'alpine:3.8'
        name: download-tools
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools               
  resourceExclusions: "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n"
  server:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
  configManagementPlugins: |
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./"]